03_Maven.txt

 # Maven
 
  - 자바의 프로젝트 자동 관리 도구
  - 프로젝트를 진행하면서 발생하는 다양한 이슈들을
    편리하게 관리할 수 있는 빌드 자동화 도구    
    ex : 라이브러리 관리, 프로젝트 버전 관리, 프로젝트 배포 관리 ... 등등 
  - 프로젝트 내부의 pom.xml 파일에 적혀있는 대로 프로젝트를 유지하는 프로그램이다
  
 # POM (Project Object Model)
 
  - 프로젝트 객체 모델
  - 해당 프로젝트에 대한 여러가지 설정과 의존성 정보들을 담고 있다
  
 # pom.xml
 
  <groupId>	 	: 그룹 아이디 
  <artifactId> 	: 아티팩트 아이디
  <name> 		: 실제 프로젝트 이름
  <packaging> 	: 이 프로젝트의 결과물이 무엇일지 설정
  <version>	 	: 이 프로젝트의 현재 버전

  <properties>
  	밑에서 사용할 변수들을 선언하는 곳
  </properties>
  
  <dependencies>
	이 프로젝트를 구성하는 다른 프로젝트들 (이 프로젝트가 의존하는 다른 프로젝트들)
	여기에 적어둔 다른 프로젝트들은 메이븐이 자동으로 다운로드하여 관리해준다.
	우리 프로젝트에 자동으로 포함시킨다.
  
  <dependency>	: 의존하는 프로젝트의 pom 정보를 적는 곳.
  				  해당 프로젝트의 <groupId>, <artifactId>, <version> 등을 적는다.
  				  <scope>를 설정하여 우리 프로젝트에서 어떤 범위까지 사용될지 결정할 수 있다.
  				  				
  </dependencies>
					
  
 # <Scope>의 종류	
 
  - 해당 <dependency>가 프로젝트에서 사용되는 범위를 설정하는 옵션
  
  - compile	 : 프로젝트를 컴파일할 때 필요한 의존성.
  			   컴파일 당시에도 사용되고, 프로젝트 배포시에도 포함된다. (기본값)
  
  - runtime	 : 컴파일 할 때는 딱히 필요없지만, 프로젝트 배포에는 포함되어야 하는 의존성. (ojbdc 등)
  
  - provided : 컴파일 할 때는 필요하지만, 배포에는 포함되지 않는 의존성. (jsp 등)
  
  - test : 테스트 코드에만 필요한 프로젝트. 컴파일과 배포에 모두 포함되지 않는다. (JUnit 등)
  
  
 # Maven의 원격 레포지토리와 로컬 레포지토리
 
  - Maven은 <dependencies>에 등록한 모든 프로젝트들을 중앙 원격 레포지토리에서 다운받는다.
    (원격 레포지토리)
    
  - 다운 받은 프로젝트들은 
    %USER_HOME%/.m2/repository/groupId/artifactId 폴더에 버전별로 보관한다.
    (로컬 레포지토리)
  			
  - 다운 받은 프로젝트들을 관리할 때 <groupId>와 <artifactId>를 경로로 사용하여 보관한다.				
					
				
					
					
					
					
					
					
					
