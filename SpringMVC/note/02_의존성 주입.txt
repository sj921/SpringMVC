02_의존성 주입.txt

 # Java Bean Object (자바빈 객체)
 
  - 데이터 클래스를 만들 때 자주 사용하는 클래스의 형태를 의미한다
  - 필드값의 접근 제어자는 private이어야 한다
  - 필드값에 대한 접근은 Getter/Setter를 이용해야 한다
  - 기본 생성자가 반드시 존재해야 한다
   (스프링이 알아서 해당 객체의 인스턴스를 관리하게 하기 위함)
 
  자바빈 객체 스타일의 데이터 클래스는
  다양한 프레임워크, API, 라이브러리 등에서 사용된다
  
 # 스프링이 자동으로 수거해가는 어노테이션들
 
  @Component : 컨텍스트 로드 시 스프링이 자동으로 수거해가는 대상이 된다.
 			  컴포넌트 스캔을 통해 특정 패키지의 컴포넌트들을 수거할 수 있다.
 			  
  @Controller : MVC 패턴에서 컨트롤러 역할을 하는 컴포넌트들을 등록할 때 사용하는 어노테이션
 
  @Repository : MVC 패턴에서 데이터 클래스(Model) 역할을 하는 컴포넌트들을 등록할 때 사용하는 어노테이션.
 
  @Service : 비즈니스 로직을 수행하는 컴포넌트들을 등록할 때 사용하는 어노테이션.
 
  @Autowired : 컨텍스트 영역에 알맞은 컴포넌트가 있다면 인스턴스를 자동으로 주입하는 어노테이션.
 			  스프링이 컨텐스트에 등록된 여러 컴포넌트들 중에서 가장 적합한 컴포넌트를 선택하여 주입한다.
 
 
  root-context.xml 또는 servlet-context.xml에서 원하는 패키지의 컴포넌트들을 수집할 수 있다.
  패키지를 지정하면 해당 패키지 내부의 컴포넌트들을 찾는다.
 
  * <context:component-scan base-package="com.ezen.springmvc" />
 
  스캔 당하여 컴텍스트에 등록된 컴포넌트들은 @Autowired 어노테이션이 붙어있는 곳에 자동으로 주입된다
  컨텍스트 스캔을 하기 위해서는 해당 xml 파일에 context 문법을 추가해야 한다.
 
  xmlns:context="http://www.springframework.org/schema/context"
 
  servlet-context.xml에는 위의 설정이 이미 적용되어 있지만
  root-context.xml에서 스캔을 하고 싶다면 직접 추가로 적용해야 한다
 
 
 # 싱글톤 (Singleton)
 
  - Context에 등록된 객체는 싱글톤 패턴이 적용되어 있다
  - 컨텍스트에서 애플리케이션 내내 단 하나의 인스턴스만 사용하는 것이 보장되어 있다
  - 만약 인스턴스가 필요한 상황이라면 new 생성자를 통해 새로 만들어야 한다
  
 
 
 
 
 
 
 
 
 
 
 
 
 