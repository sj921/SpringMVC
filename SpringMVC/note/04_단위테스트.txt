04_단위테스트.txt

 # 단위 테스트 (Unit Test)
 
  - 기능 구현 후 해당 기능이 원하는 대로 동작하는지 보기 위해 만드는 프로그램
  - 테스트 중에서는 가장 작은 단위의 테스트에 속한다
  - 어떤 기능(메서드)를 실행했을 때 '기대하던 값(Expect)'이 
    잘 나오는지 체크하는 방식으로 진행
    
 # JUnit
 
  - 자바의 단위 테스트용 라이브러리
  - 스프링 프로젝트 배포시 작성되어 있는 모든 단위 테스트를 통과해야 배포가 진행된다
  - Spring Legacy Project에 기본적으로 등록되어 있는 JUnit은 버전이 너무 옛날 것이므로
    버전업을 한 후 사용하도록 하자
 
 # JUnit의 어노테이션들
 
  @Test
 
   - 해당 메서드가 단위 테스트임을 표시하는 어노테이션
  
  @Ignore
 
   - 해당 테스트 메서드를 무시하게 된다
  
  @Before
 
   - 해당 메서드가 테스트 시작 전 실행된다
   - 테스트 전에 초기화, 접속 등의 작업을 먼저 수행하는 역할
  
  @After
 
   - 해당 메서드가 테스트 종료 후 실행된다
 
 
 # JUnit Asserts
 
  - 기대하던 결과가 나오면 초록불이 들어오고, 기대와 결과가 다르면 빨간불이 들어온다
  - assertEquals(e, a) :  두 값이 일치하면 테스트 통과
  - assertTrue(a) : 결과가 true이면 테스트 통과
  - assertFalse(a) : 결과가 false이면 테스트 통과
  - assertNull(a) : 결과가 null이면 테스트 통과
  - assertNotNull(a) : 결과가 null이 아니면 테스트 통과
  - assertThrows(e, a) : 전달한 람다 실행 도중 원하는 예외가 발생하면 테스트 통과
  - fail() : fail을 만나면 테스트 실패 (테스트 내에서 return 같은 역할)
 
    expect, actual 
    같은 object인지를 보는 것이 same
 
 


